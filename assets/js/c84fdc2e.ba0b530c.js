"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[504],{91465:e=>{e.exports=JSON.parse('{"functions":[{"name":"fromValue","desc":"Not recommended to use this function. Use ``Repli.listenForCreation`` instead.   ","params":[{"name":"class","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"RepliClient"}],"function_type":"static","source":{"line":83,"path":"lib/Repli/RepliClient.lua"}},{"name":"listenForCreation","desc":"Example:\\n```lua\\nRepli.listenForCreation(\\"TestValue\\", function(testValue)\\n    -- Gett the initial value\\n    local initialValue = testValue.value;\\n\\n    -- Listen for further changes\\n    testValue:subscribe(function(newValue)\\n        print(newValue);\\n    end);\\nend);\\n```","params":[{"name":"class","desc":"","lua_type":"string"},{"name":"callback","desc":"","lua_type":"(RepliClient) -> ()"}],"returns":[{"desc":"","lua_type":"RepliClient"}],"function_type":"static","source":{"line":136,"path":"lib/Repli/RepliClient.lua"}},{"name":"isReady","desc":"Returns true if the client is ready to receive data.\\n\\nExample:\\n```lua\\nif (testValue:isReady()) then\\n    print(testValue:getValue());\\nend;\\n```\\n\\n:::caution\\nThis will return false if the client is not ready. Consider using ``onReady`` if you want to wait for the value to be ready.\\n:::","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":165,"path":"lib/Repli/RepliClient.lua"}},{"name":"onReady","desc":"Returns a promise that resolves when the client is ready.\\n\\nExample:\\n```lua\\ntestValue:onReady():andThen(function()\\n    print(testValue:getValue());\\nend);\\n```","params":[],"returns":[{"desc":"","lua_type":"Promise<any>"}],"function_type":"method","source":{"line":182,"path":"lib/Repli/RepliClient.lua"}},{"name":"subscribe","desc":"Subscribes to changes.\\n\\nExample:\\n```lua\\ntestValue:subscribe(function(newValue)\\n    print(newValue);\\nend);\\n```","params":[{"name":"callback","desc":"","lua_type":"(newValue: any) -> ()"}],"returns":[{"desc":"","lua_type":"Signal\\n"}],"function_type":"method","source":{"line":208,"path":"lib/Repli/RepliClient.lua"}},{"name":"getValue","desc":"Returns the current value\\n\\nExample:\\n```lua\\nprint(testValue:getValue());\\n```\\n\\n:::caution\\nThis will return nil if the client is not ready. Consider using ``onReady`` if you want to wait for the value to be ready.\\n:::","params":[],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":227,"path":"lib/Repli/RepliClient.lua"}}],"properties":[{"name":"isReady","desc":"Whether or not the client is ready to receive data","lua_type":"boolean","readonly":true,"source":{"line":12,"path":"lib/Repli/RepliClient.lua"}},{"name":"value","desc":"The current value of the class","lua_type":"any","source":{"line":18,"path":"lib/Repli/RepliClient.lua"}}],"types":[],"name":"RepliClient","desc":"","realm":["Client"],"source":{"line":22,"path":"lib/Repli/RepliClient.lua"}}')}}]);