"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var l=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},a=Object.keys(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=l.createContext({}),p=function(e){var t=l.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return l.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return r?l.createElement(f,i(i({ref:t},s),{},{components:r})):l.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<a;p++)i[p]=r[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,r)}m.displayName="MDXCreateElement"},84381:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var l=r(87462),n=(r(67294),r(3905));const a={sidebar_position:3},i="Examples",o={unversionedId:"examples",id:"examples",title:"Examples",description:"Simple Example (Server)",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/Repli/docs/examples",draft:!1,editUrl:"https://github.com/arxkdev/Repli/edit/main/docs/examples.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Notes",permalink:"/Repli/docs/notes"},next:{title:"More Examples",permalink:"/Repli/docs/moreexamples"}},c={},p=[{value:"Simple Example (Server)",id:"simple-example-server",level:2},{value:"Simple Example (Client)",id:"simple-example-client",level:2}],s={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,l.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"examples"},"Examples"),(0,n.kt)("h2",{id:"simple-example-server"},"Simple Example (Server)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players");\nlocal Repli = require(game:GetService("ReplicatedStorage").Repli);\n\nlocal replicatedValue = Repli.createValue("ReplicatedValue", 0);\nlocal replicatedTable = Repli.createTable("ReplicatedTable", {1, 2, 3});\nprint(replicatedValue:getValue()); -- 0\n\n-- Set the value for all clients to 5\nreplicatedValue:setValue(5);\n\n-- Get the value for all clients\nlocal value = replicatedValue:getValue();\nprint(value); -- 5\n\n-- Individually set the value for each client\nPlayers.PlayerAdded:Connect(function(player)\n    -- Set the value for a specific client\n    replicatedTable:setValueForClient(player, {1, 2, 3, 4});\n\n    -- Get the value for a specific client\n    local value = replicatedTable:getValueForClient(player);\n    print(value); -- {1, 2, 3, 4}\nend);\n')),(0,n.kt)("h2",{id:"simple-example-client"},"Simple Example (Client)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players");\nlocal Repli = require(game:GetService("ReplicatedStorage").Repli);\n\n-- Write a callback to be called when the value changes\nlocal function onValueChanged(newValue)\n    -- Will initially print 0, but will print 5 after the server sets the value\n    print(newValue); -- 5\nend\n\n-- Listen for the value to be created\nRepli.listenForCreation("ReplicatedValue", function(replicatedValue)\n    -- Add the callback to the subscriber method\n    replicatedValue:subscribe(onValueChanged);\nend);\n')))}d.isMDXComponent=!0}}]);